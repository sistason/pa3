---
- name: create data directory
  file: path=data state=directory

# Manage secrets
- name: create secrets directory
  file: path=data/secrets state=directory

- name: secret_path_mysql_root_password exists?
  stat:
    path: "{{ secret_path_mysql_root_password }}"
  register: exists
- name: delete pw file if empty, as the lookup_password uses an empty pw otherwise
  when: exists.stat.size is defined and exists.stat.size < 4
  file:
    path: "{{ secret_path_mysql_root_password }}"
    state: absent

- name: secret_path_django_secret_key exists?
  stat:
    path: "{{ secret_path_django_secret_key }}"
  register: exists
- name: delete pw file if empty, as the lookup_password uses an empty pw otherwise
  when: exists.stat.size is not defined or exists.stat.size < 4
  file:
    path: "{{ secret_path_django_secret_key }}"
    state: absent

- name: secret_path_recognizer_auth exists?
  stat:
    path: "{{ secret_path_recognizer_auth }}"
  register: exists
- name: delete pw file if empty, as the lookup_password uses an empty pw otherwise
  when: exists.stat.size is not defined or exists.stat.size < 4
  file:
    path: "{{ secret_path_recognizer_auth }}"
    state: absent

# Create secrets
- set_fact:
    secret_data_mysql_root_password: "{{ lookup('password', secret_path_mysql_root_password + ' length=32') }}"
    secret_data_django_secret_key: "{{ lookup('password', secret_path_django_secret_key + ' length=32') }}"
    secret_data_recognizer_auth: "{{ lookup('password', secret_path_recognizer_auth + ' length=32') }}"

