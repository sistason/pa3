---
# TODO: check if command-not-found, else skip whole docker apt
- name: Check if docker is already there
  command: docker info
  register: p
  ignore_errors: yes

- set_fact:
    docker_missing: "{{ p.rc != 0 }}"

# Adapted from nickjj/ansible-docker
- name: Install Docker and role dependencies
  become: yes
  apt:
    name: "{{ item }}"
    state: "present"
    install_recommends: False
  with_items:
    - "apt-transport-https"
    - "ca-certificates"
    - "software-properties-common"
    - "python-docker"
    - "rsync"
  when: docker_missing

- name: Get upstream APT GPG key
  become: yes
  apt_key:
    id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
    keyserver: "{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver)
                   else 'hkp://pool.sks-keyservers.net' }}"
    state: "present"
  when: docker_missing

- name: get packet_architecture
  set_fact:
    architecture: "{{ 'armhf' if ansible_machine.startswith('arm') else 'amd64' }}"
  when: docker_missing

- name: Configure upstream APT repository
  become: yes
  apt_repository:
    repo: "deb [arch={{ architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} edge"
    state: "present"
    update_cache: True
  when: docker_missing

- name: Install Docker
  become: yes
  apt:
    name: "docker-ce"
    state: "present"
    update_cache: True
    install_recommends: False
    cache_valid_time: "86400"
  when: docker_missing

- name: create etc/docker directory
  file:
    path: "/etc/docker"
    state: "directory"

- name: Configure Docker - create config file
  become: yes
  copy:
    content: "{\n  \"iptables\": false,\n  \"bip\": \"172.16.0.1/24\"\n}"
    dest: "/etc/docker/daemon.json"
    force: yes
